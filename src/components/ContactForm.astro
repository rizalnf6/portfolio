---
// src/components/ContactForm.astro
---

<form id="contact-form" class="max-w-xl mx-auto">
    <div class="mb-6">
      <label for="name" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Name</label>
      <input 
        type="text" 
        id="name" 
        name="name" 
        required
        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary-600 focus:border-transparent dark:bg-gray-800 dark:border-gray-700 dark:text-white"
      />
    </div>
    
    <div class="mb-6">
      <label for="email" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Email</label>
      <input 
        type="email" 
        id="email" 
        name="email" 
        required
        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary-600 focus:border-transparent dark:bg-gray-800 dark:border-gray-700 dark:text-white"
      />
    </div>
    
    <div class="mb-6">
      <label for="message" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Message</label>
      <textarea 
        id="message" 
        name="message" 
        rows="5" 
        required
        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-primary-600 focus:border-transparent dark:bg-gray-800 dark:border-gray-700 dark:text-white"
      ></textarea>
    </div>
    
    <div class="text-center">
      <button 
        type="submit"
        class="bg-primary-600 hover:bg-primary-700 text-white font-medium py-2 px-6 rounded-md transition-colors"
      >
        Send Message
      </button>
    </div>
    
    <div id="form-status" class="mt-4 text-center hidden"></div>
  </form>
  
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const form = document.getElementById('contact-form');
      const formStatus = document.getElementById('form-status');
      
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        // Show sending status
        formStatus.textContent = 'Sending...';
        formStatus.className = 'mt-4 text-center text-gray-600 dark:text-gray-400';
        
        // In a real application, you would send this to your backend
        // For demo purposes, we'll simulate a successful submission
        setTimeout(() => {
          formStatus.textContent = 'Your message has been sent! I\'ll get back to you soon.';
          formStatus.className = 'mt-4 text-center text-green-600 dark:text-green-400';
          form.reset();
        }, 1500);
        
        // For a real implementation you might do something like:
        /*
        try {
          const formData = new FormData(form);
          const response = await fetch('/api/contact', {
            method: 'POST',
            body: formData
          });
          
          const result = await response.json();
          
          if (response.ok) {
            formStatus.textContent = 'Your message has been sent! I\'ll get back to you soon.';
            formStatus.className = 'mt-4 text-center text-green-600 dark:text-green-400';
            form.reset();
          } else {
            throw new Error(result.message || 'Something went wrong');
          }
        } catch (error) {
          formStatus.textContent = error.message;
          formStatus.className = 'mt-4 text-center text-red-600 dark:text-red-400';
        }
        */
      });
    });
  </script>